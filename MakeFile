# SFML library directories
CC = g++
TARGET = EvolutionaryAlgorithm.exe # Build target

LIB_SFML_DIR = src/SFML_lib/ # SFML library directory
INCLUDE_SFML_DIR = C:\SFML\include # SFML header files directory

SRCINCLUDE_DIR = include\\

CFLAGS = -I$(INCLUDE_SFML_DIR) -I$(INCLUDE_GRAPHMASTER_DIR) -Wall
LDFLAGS = -L$(LIB_SFML_DIR)
LIBS = -lsfml-graphics -lsfml-window -lsfml-system -lopengl32 -lsfml-audio


# 소스 파일 목록
SRCINCLUDE = EA\\evolution.cpp EA\\TSP.cpp Visualization\\PauseableClock.cpp Visualization\\Visualize.cpp Visualization\\Utility.cpp Visualization\\state.cpp Visualization\\stateStack.cpp Visualization\\SoundPlayer.cpp Visualization\\MusicPlayer.cpp Visualization\\CommandQueue.cpp Visualization\\States\\StateLogo.cpp Visualization\\GUI\\Button.cpp Visualization\\GUI\\Component.cpp Visualization\\GUI\\Container.cpp Visualization\\GUI\\Label.cpp Visualization\\States\\StateHome.cpp Visualization\\States\\StateMain.cpp Visualization\\Fragment\\TSPVisualizer.cpp Visualization\\Fragment\\MainStep1.cpp Visualization\\Fragment\\MainStep2.cpp Visualization\\Fragment\\MainStep3.cpp Visualization\\AnalysisInformation.cpp Visualization\\States\\StateResult.cpp
SRCINCLUDE := $(addprefix $(SRCINCLUDE_DIR), $(SRCINCLUDE))
SRCS = main.cpp $(SRCINCLUDE)

# 객체 파일 목록 (소스 파일을 컴파일하여 생성됨)
OBJS = $(SRCS:.cpp=.o)

# 빌드 규칙
$(TARGET): $(OBJS)
	$(CC) $(LDFLAGS) -o $@ $(OBJS) $(LIBS) 
# $(CC) $(LDFLAGS) -o $@ $(OBJS) $(LIBS) -mwindows

%.o: %.cpp
	$(CC) $(CFLAGS) -c $< -o $@

# clean 대상
clean:
	del /F $(OBJS) $(TARGET)

re: clean $(TARGET)
